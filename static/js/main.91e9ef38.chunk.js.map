{"version":3,"sources":["UI/spinner/Spinner.js","App.js","reportWebVitals.js","store/utility/utility.js","store/Reducer/Auth.js","store/Reducer/GoogleAuth.js","store/Reducer/Gif.js","index.js","store/actions/Auth.js","store/actions/GoogleAuth.js","store/actions/Gif.js","firebase.js","store/ThemeContext.js","store/FormContext.js","store/actions/actionTypes.js"],"names":["Spinner","className","Header","lazy","Mainpage","Home","Jobs","Chat","connect","state","isAuthenticated","Auth","token","isgoogleAuth","GoogleAuth","user","dispatch","onTryAutoSignup","actions","onGoogleauth","props","useEffect","routes","exact","path","component","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","userId","error","email","loading","authRedirectionpath","authstart","action","authsuccess","idToken","authFail","authLogout","setAuthRedirectPath","authRedirectPath","reducer","type","actionTypes","googleauth","console","log","value","OnGifclick","fetchGifs","composeEnhancers","compose","rootReducer","combineReducers","AuthReducer","GoogleAuthReducer","GIF","GifReducer","store","createStore","applyMiddleware","thunk","i18next","use","HttpApi","LanguageDetector","initReactI18next","init","supportedLngs","fallbackLng","debug","detection","order","caches","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","password","isSignup","authData","returnSecureToken","url","axios","post","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","authCheckState","getItem","signInWithPopup","provider","result","uid","alert","message","googlelogout","giphyFetch","GiphyFetch","process","offset","a","trending","limit","gif","e","preventDefault","images","original","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","GoogleAuthProvider","ThemeContext","React","createContext","theme","toggleTheme","ThemeProvider","useState","settheme","backgroundColor","color","body","style","Provider","children","FormContext","media","readFileAsDataURL","FormProvider","setvalue","setmedia","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","SET_USER","GOOGLE_LOGOUT","GIF_SHOW","FETCH_GIF"],"mappings":"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","file":"static/js/main.91e9ef38.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => <div className={'lds-hourglass'}>loading...</div>;\n\nexport default Spinner;\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // withRouter,\n} from 'react-router-dom';\nimport Spinner from './UI/spinner/Spinner';\nimport * as actions from './store/actions/index';\nimport { connect } from 'react-redux';\n\nconst Header = lazy(() => import('./UI/Header/header'));\nconst Mainpage = lazy(() => import('./UI/Pages/Mainpage/Mainpage'));\nconst Home = lazy(() => import('./UI/Home/Home'));\nconst Jobs = lazy(() => import('./UI/Pages/Jobs/Jobs'));\nconst Chat = lazy(() => import('./UI/Pages/Chat/Chat'));\n\nconst App = (props) => {\n  const { onTryAutoSignup } = props;\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n  // console.log(props.isgoogleAuth);\n\n  let routes = (\n    <Switch>\n      <Route exact path='/' component={Home} />\n    </Switch>\n  );\n\n  if (props.isAuthenticated || props.isgoogleAuth) {\n    routes = (\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Mainpage} />\n          <Route exact path='/Jobs' component={Jobs} />\n          <Route exact path='/Messaging' component={Chat} />\n          <Route exact path='/Notification'>\n            <h1>Notification</h1>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  return (\n    <Suspense fallback={<Spinner />}>\n      <div className='App'>{routes}</div>;\n    </Suspense>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Auth.token !== null,\n    isgoogleAuth: state.GoogleAuth.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    onGoogleauth: () => dispatch(actions.googleauth()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern =\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility/utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  email: null,\n  loading: false,\n  authRedirectionpath: '/',\n};\n\nconst authstart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authsuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authstart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authsuccess;\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility/utility';\n\nexport const initialState = {\n  user: null,\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    user: null,\n  });\n};\n\nconst googleauth = (state, action) => {\n  return updateObject(state, {\n    user: action.user,\n  });\n};\nconsole.log(googleauth);\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return googleauth(state, action);\n    case actionTypes.GOOGLE_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility/utility';\n\nconst initialState = {\n  value: null,\n};\n\nconst OnGifclick = (state, action) => {\n  return updateObject(state, {\n    value: action.value,\n  });\n};\n\nconst fetchGifs = (state, action) => {\n  return updateObject(state, action);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GIF:\n      return fetchGifs(state, action);\n    case actionTypes.GIF_SHOW:\n      return OnGifclick(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initReactI18next } from 'react-i18next';\nimport i18next from 'i18next';\nimport HttpApi from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { BrowserRouter } from 'react-router-dom';\n\n// redux\n\nimport AuthReducer from './store/Reducer/Auth';\nimport GoogleAuthReducer from './store/Reducer/GoogleAuth';\nimport GifReducer from './store/Reducer/Gif';\n\nimport { ThemeProvider } from './store/ThemeContext';\nimport { FormProvider } from './store/FormContext';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  Auth: AuthReducer,\n  GoogleAuth: GoogleAuthReducer,\n  GIF: GifReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\ni18next\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    supportedLngs: ['en', 'de', 'ar'],\n    fallbackLng: 'en',\n    debug: false,\n    // Options for language detector\n    detection: {\n      order: ['path', 'cookie', 'htmlTag'],\n      caches: ['cookie'],\n    },\n    // react: { useSuspense: false },\n    backend: {\n      // loadPath: 'assets/locales/{{lng}}/translation.json',\n      loadPath: 'assets/locales/{{lng}}/translation.json',\n    },\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* special for theming */}\n    <BrowserRouter>\n      <Provider store={store}>\n        <ThemeProvider>\n          <FormProvider>\n            <App />\n          </FormProvider>\n        </ThemeProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authstart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authsuccess = () => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n// this expiration time *1000\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 100);\n  };\n};\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};\n\nexport const auth = (email, password, isSignup) => {\n  return (dispatch) => {\n    dispatch(authstart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    };\n    let url =\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAr4Xsn-f9fMxw1zLRHmYGL6s6ltNbn9CU';\n    if (!isSignup) {\n      url =\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAr4Xsn-f9fMxw1zLRHmYGL6s6ltNbn9CU';\n    }\n    axios\n      .post(url, authData)\n      .then((response) => {\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000,\n        );\n        localStorage.setItem('token', response.data.idToken);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('userId', response.data.localId);\n        dispatch(authsuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch((err) => {\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      // putting expiration date\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        dispatch(authsuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000,\n          ),\n        );\n      }\n    }\n  };\n};\n","import * as actionTypes from './actionTypes';\nimport { auth, provider } from '../../firebase';\n\nexport const googleauth = () => {\n  return (dispatch) => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: result.user,\n        });\n        localStorage.setItem('user', result.user.uid);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n};\n\nexport const googlelogout = () => {\n  localStorage.removeItem('user');\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n","import * as actionTypes from './actionTypes';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\n\nexport const giphyFetch = new GiphyFetch(process.env.REACT_APP_GIPHY_KEY);\n\nexport const fetchGifs = (offset) => async () =>\n  await giphyFetch.trending({ offset, limit: 10 });\n\n// console.log(fetchGifs);\n// export const fetchGifs = (offset) => {\n//   return async (dispatch) => {\n//     const result = await giphyFetch.trending({ limit: 10 });\n//     const Gifs = result.data.map((images) => images.url);\n//     dispatch({\n//       type: actionTypes.FETCH_GIF,\n//       value: Gifs,\n//     });\n//   };\n// };\n\nexport const OnGifclick = (gif, e) => {\n  e.preventDefault();\n  return (dispatch) =>\n    dispatch({\n      type: actionTypes.GIF_SHOW,\n      value: gif.images.original.url,\n    });\n};\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATA_BASEURL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDERID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n// firebase firestore\n\nconst db = firebaseApp.firestore();\n\nconst auth = firebase.auth();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n// firebase database\n// const database = firebase.database();\n// firebase upload\n// const storageRef = firebase.storage().ref();\n\n// const ref = database.ref('')\n// var ref = database.ref('Messages');\n// ref.push({\n\nexport { auth, provider };\n// export default db;\n\nexport default db;\n\n// const Messagesfire =\n//   'https://socialnetwork-6c17c-default-rtdb.europe-west1.firebasedatabase.app/Messages.json';\n// console.log(Messagesfire);\n","import React, { useState } from 'react';\n\nconst Theme = 'light' | 'dark';\n\nexport const ThemeContext = React.createContext({\n  theme: Theme,\n  toggleTheme: () => {},\n});\n// theme provider wrapped the app tag in index to through the value\nexport const ThemeProvider = (props) => {\n  const [theme, settheme] = useState('light');\n\n  // toogler\n  const toggleTheme = () => {\n    settheme(theme === 'light' ? 'dark' : 'light');\n  };\n  // switcher between font and background\n  const backgroundColor = theme === 'light' ? '#FFF' : '#333';\n  const color = theme === 'light' ? '#333' : '#FFF';\n\n  // DOM\n  // document.body.style.color = color;\n  // document.body.style.backgroundColor = backgroundColor;\n  document.body.style.color = color;\n  document.body.style.backgroundColor = backgroundColor;\n\n  // wrapped index.js\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\n\nexport const FormContext = React.createContext({\n  value: null || '',\n  media: [],\n  OnGifclick: () => {},\n  fetchGifs: () => {},\n  readFileAsDataURL: () => {},\n});\n\n// theme provider wrapped the app tag in index to through the value\nexport const FormProvider = (props) => {\n  const [value, setvalue] = useState(null);\n  const [media, setmedia] = useState(null);\n\n  // console.log(media);\n\n  const giphyFetch = new GiphyFetch(process.env.REACT_APP_GIPHY_KEY);\n  const fetchGifs = (offset) => giphyFetch.trending({ offset, limit: 10 });\n\n  const OnGifclick = (gif, e) => {\n    e.preventDefault();\n    setvalue(gif.images.original.url);\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        OnGifclick,\n        fetchGifs,\n        value,\n        media,\n        setmedia,\n      }}>\n      {props.children}\n    </FormContext.Provider>\n  );\n};\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\nexport const SET_USER = 'SET_USER';\nexport const GOOGLE_LOGOUT = ' GOOGLE_LOGOUT';\n\n// export const CHAT_SUCCESS = 'CHAT_SUCCESS';\n// export const CHAT_FAIL = 'CHAT_FAIL';\n// export const CHAT_START = 'CHAT_START';\n\nexport const GIF_SHOW = 'GIF_SHOW';\nexport const GIF_FETCH = 'GIF_FETCH';\nexport const FETCH_GIF = 'FETCH_GIF';\n"],"sourceRoot":""}